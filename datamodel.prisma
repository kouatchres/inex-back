 enum Permission {

        USER
        ADMIN
        ITEM_CREATE
        ITEM_DELETE
        ITEM_UPDATE
        PERMISSION_UPDATE

  }
  

type User {
    id : ID! @id @unique
    name : String !
    email : String ! @unique
    password: String!
    resetToken: String
    resetTokenExpiry: String
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt
    permissions: [Permission]! @scalarList(strategy: RELATION)
}

type Region {
    id : ID  ! @id @unique
    regName : String !
    regCode : String ! @unique
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
    division : [Division]!
}

type Division {
    id : ID  ! @id @unique
    divName : String !
    divCode : String ! @unique
    region : Region !
    subDivision : [SubDivision]!
    createdAt : DateTime! @createdAt
    
    updatedAt : DateTime! @updatedAt  
}

type SubDivision {
    id : ID  ! @id @unique
    subDivName : String !
    subDivCode : String ! @unique
    division : Division !
    createdAt : DateTime! @createdAt  
    updatedAt : DateTime! @updatedAt  
    town : [Town]!
}

type Town {
    id : ID  ! @id @unique
    townName : String !
    townCode : String ! @unique
    subDiv : SubDivision !
    createdAt : DateTime! @createdAt 
    updatedAt : DateTime! @updatedAt  
    center : [Center]!
}

type Center {
    id : ID  ! @id @unique
    centerName : String !
    centerCode : String ! @unique
    town : Town !
    centerNumber : Int ! @unique
    createdAt : DateTime! @createdAt 
    updatedAt : DateTime! @updatedAt
    registration: [Registration]!
    centerAdmin:[CenterAdmin]!
    scores:[Score]!
}

type Series {
    id : ID  ! @id @unique
    seriesName : String !
    seriesCode : String ! @unique
    
    subjectSeries: [SubjectSeries]!
    createdAt : DateTime! @createdAt 
    updatedAt : DateTime! @updatedAt  
    educationType : EducationType !
    
}
type EducationType {
    id : ID  ! @id @unique
    subject: [Subject]!
    educationTypeName : String
    educationTypeCode : String! @unique
    createdAt : DateTime! @createdAt 
    updatedAt : DateTime! @updatedAt  
    series : [Series]!
}

type Exam {
    id : ID  ! @id @unique
    examName : String !
    registration: [Registration]!
    examCode : String ! @unique
    createdAt : DateTime! @createdAt 
    updatedAt : DateTime! @updatedAt 
   
}
type Subject {
    id : ID  ! @id @unique
    subjectName : String ! @unique
    subjectCode : String ! @unique
    subjectType: SubjectType! 
    educType: EducationType!
    createdAt : DateTime! @createdAt 
    updatedAt : DateTime! @updatedAt  
}

type Session {
    id : ID  ! @id @unique
      registration: [Registration]!
    sessionName : String !@unique
    sessionCode : String ! @unique
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
   
}

type Gender {
    id : ID  ! @id @unique
    genderName : String !
    genderCode : String ! @unique
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
    candidate : [Candidate]!
}

type Candidate {
    id : ID  ! @id @unique
    cand1stName : String
    cand2ndName : String
    cand3rdName : String
    placeOfBirth : String
    image : String
    birthCertNumber : String
    candCode : String! @unique
    email : String! @unique
    phoneNumb : Int
    dateOfBirth : DateTime @dateOfBirth
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
    gender : Gender !
    scores: [Score]!
    registration: [Registration]!
}

type Rank {
    id : ID  ! @id @unique
    rankName : String !
    rankCode : String !
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
    centerAdmin : [CenterAdmin]!
}
type CenterAdmin {
    id : ID  ! @id @unique
    authName: String!
    authCNI: String!
    authPhone: Int!
    authMatricule: String!
    authCode: String! @unique
    exam: Exam!
    rank: Rank!
    session: Session!
    center : Center!
    sessionRank: String! @unique
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
    report : [Report]!
}
type Report {
    id : ID  ! @id @unique
    reportName : String !
    centerAdmin : CenterAdmin !
    reportImage: String!
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  

}

type Score {
    id : ID! @id @unique
    subjectAve : Float
    subjectTotal : Float
    registration : Registration !
    subjectSeries: SubjectSeries!
    presence: Boolean
    coeff: Int!
    candExamSecretCode: String!
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt
}
type Registration {
    id : ID  ! @id @unique
    candidate : Candidate !
    exam: Exam!
    series: Series!
    session: Session!
    center : Center!
    createdAt : DateTime ! @createdAt
    updatedAt : DateTime ! @updatedAt
    scores: [Score]!
    candExamSecretCode: String! @unique
    chefSecCode: String
    chargeMissionCode: String

}

type SubjectSeries {
    id : ID! @id @unique
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  
    series : Series!
    coeff: Int!
    subjectName : String ! 
    subjectCode : String ! 
}




type SubCenter {
    subCenterName: String!
    subCenterCode: String!
    id : ID! @id @unique  
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt 
    center: Center! 

}

type SubjectType {
    subjectTypeName: String!@unique
    subjectTypeCode: String!@unique
    id : ID! @id @unique  
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  

}

type AnotherType {
    id : ID! @id @unique  
    createdAt : DateTime! @createdAt
    updatedAt : DateTime! @updatedAt  

}
